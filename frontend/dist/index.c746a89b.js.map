{"mappings":"AECA,MAAM,EAAY,MAAO,EAAS,EAAM,EAAI,KAC1C,GAAI,CACF,IAAI,EAAU,MAAM,MAClB,CAAC,yCAAyC,EAAE,EAAQ,OAAO,EAAE,EAAM,CAAC,EAItE,OADA,EAAU,MAAM,EAAQ,IAAI,GACrB,GAAS,MAAM,eAAe,QAAQ,SAAW,EAAE,AAC5D,CAAE,MAAO,EAAK,CAEZ,OADA,QAAQ,GAAG,CAAC,CAAC,qCAAqC,EAAE,EAAI,CAAC,EAClD,EAAE,AACX,CACF,EDXM,EAA8B,MAAO,EAAS,EAAQ,EAAK,KAC/D,GAAI,CACF,IAAM,EAAO,MAAM,AAAA,EAAU,EAAS,EAAM,EAAI,GAEhD,OADoB,EAAoB,EAE1C,CAAE,MAAO,EAAK,CACZ,QAAQ,GAAG,CAAC,CAAC,sCAAsC,EAAE,EAAI,CAAC,CAC5D,CACF,EAEM,EAAsB,CAAC,EAAU,EAAE,IACrC,GAAI,CAQF,IAAM,EAAe,EAAQ,GAAG,CAAC,AAAC,IAChC,GAAI,CAAC,EAAS,OACd,IAAM,EAAY,EAAQ,iBAAiB,EAAE,IAAM,GAC7C,EAAe,EAAQ,WAAW,EAAE,MAAQ,GAC5C,EAAW,EAAQ,iBAAiB,EAAE,UAAY,GAClD,EACJ,GAAS,uBAAuB,qBAAqB,cACjD,eAAe,QAAU,GAC/B,MAAO,CAAC,EAAW,EAAc,EAAU,EAAc,CACtD,GAAG,CAAC,AAAA,GAAS,CAAC,CAAC,EAAE,EAAM,CAAC,CAAC,EACzB,IAAI,CAAC,IACV,GAOA,MALmB,CACjB,wDACG,EACJ,CAAC,IAAI,CAAC,KAGT,CAAE,MAAO,EAAK,CAEZ,OADA,QAAQ,GAAG,CAAC,CAAC,4BAA4B,EAAE,EAAI,CAAC,EACzC,EACT,CACJ,EAGA,SAAS,cAAc,CAAC,uBAAuB,gBAAgB,CAAC,QAAQ,iBACpE,IAAI,EAAU,SAAS,aAAa,CAAC,YAAY,KAAK,EAAI,YACtD,EAAO,SAAS,SAAS,cAAc,CAAC,eAAe,KAAK,GAAK,GAQ/D,EAAO,IAAI,KAAK,CADP,MAAM,EAA4B,EAAS,EAJ3C,KACC,MAIc,CAAE,CAAE,KAAM,UAAW,GAC7C,EAAO,SAAS,aAAa,CAAC,IACpC,CAAA,EAAK,IAAI,CAAG,IAAI,eAAe,CAAC,GAChC,EAAK,QAAQ,CAAG,eAChB,EAAK,KAAK,GACV,IAAI,eAAe,CAAC,EAAK,IAAI,CACjC","sources":["<anon>","index.js","api.service.js"],"sourcesContent":["const $233e897e55a69403$var$fetchData = async (address, count, lat, lon)=>{\n    try {\n        let apiResp = await fetch(`http://localhost:3000/fetch-data?address=${address}&count=${count}`);\n        apiResp = await apiResp.json();\n        return apiResp?.data?.searchQueries?.search?.results || [];\n    } catch (err) {\n        console.log(`Error while fetching data from api : ${err}`);\n        return [];\n    }\n};\nvar $233e897e55a69403$export$2e2bcd8739ae039 = $233e897e55a69403$var$fetchData;\n\n\nconst $dad545c909cfec2d$var$getDataAndGenerateCSVBuffer = async (address, count, lat, lon)=>{\n    try {\n        const data = await (0, $233e897e55a69403$export$2e2bcd8739ae039)(address, count, lat, lon);\n        const excelBuffer = $dad545c909cfec2d$var$generateListingsCsv(data);\n        return excelBuffer;\n    } catch (err) {\n        console.log(`Error in getDataAndGenerateCSVBuffer: ${err}`);\n    }\n};\nconst $dad545c909cfec2d$var$generateListingsCsv = (results = [])=>{\n    try {\n        const headers = [\n            \"Listing ID\",\n            \"Listing Title\",\n            \"Page Name\",\n            \"Amount Per Stay\"\n        ];\n        const listingsData = results.map((listing)=>{\n            if (!listing) return;\n            const listingId = listing.basicPropertyData?.id || \"\";\n            const listingTitle = listing.displayName?.text || \"\";\n            const pageName = listing.basicPropertyData?.pageName || \"\";\n            const amountPerStay = listing?.priceDisplayInfoIrene?.priceBeforeDiscount?.displayPrice?.amountPerStay?.amount || \"\";\n            return [\n                listingId,\n                listingTitle,\n                pageName,\n                amountPerStay\n            ].map((value)=>`\"${value}\"`).join(\",\");\n        });\n        const csvContent = [\n            headers.join(\",\"),\n            ...listingsData\n        ].join(\"\\n\");\n        return csvContent;\n    } catch (err) {\n        console.log(`Error while generating CSV: ${err}`);\n        return \"\";\n    }\n};\ndocument.getElementById(\"downloadExcelButton\").addEventListener(\"click\", async function() {\n    let address = document.querySelector(\"#address\").value || \"Bangalore\";\n    let rows = parseInt(document.getElementById(\"rowsperpage\").value) || 20;\n    // let latitude = parseFloat(document.querySelector('#latitude').value) \n    // let longitude = parseFloat(document.getElementById('longitude').value)\n    let latitude = null;\n    let longitude = null;\n    const buffer = await $dad545c909cfec2d$var$getDataAndGenerateCSVBuffer(address, rows, latitude, longitude);\n    const blob = new Blob([\n        buffer\n    ], {\n        type: \"text/csv\"\n    });\n    const link = document.createElement(\"a\");\n    link.href = URL.createObjectURL(blob);\n    link.download = \"Listings.csv\";\n    link.click();\n    URL.revokeObjectURL(link.href);\n});\n\n\n//# sourceMappingURL=index.c746a89b.js.map\n","import fetchData from \"./api.service\";\r\n\r\nconst getDataAndGenerateCSVBuffer = async (address, count , lat ,lon) => {\r\n  try {\r\n    const data = await fetchData(address, count,lat,lon);\r\n    const excelBuffer = generateListingsCsv(data);\r\n    return excelBuffer;\r\n  } catch (err) {\r\n    console.log(`Error in getDataAndGenerateCSVBuffer: ${err}`);\r\n  }\r\n};\r\n\r\nconst generateListingsCsv = (results = []) => {\r\n    try {\r\n      const headers = [\r\n        \"Listing ID\",\r\n        \"Listing Title\",\r\n        \"Page Name\",\r\n        \"Amount Per Stay\",\r\n      ];\r\n  \r\n      const listingsData = results.map((listing) => {\r\n        if (!listing) return;\r\n        const listingId = listing.basicPropertyData?.id || \"\";\r\n        const listingTitle = listing.displayName?.text || \"\";\r\n        const pageName = listing.basicPropertyData?.pageName || \"\";\r\n        const amountPerStay =\r\n          listing?.priceDisplayInfoIrene?.priceBeforeDiscount?.displayPrice\r\n            ?.amountPerStay?.amount || \"\";\r\n        return [listingId, listingTitle, pageName, amountPerStay]\r\n          .map(value => `\"${value}\"`) \r\n          .join(',');\r\n      });\r\n  \r\n      const csvContent = [\r\n        headers.join(','),\r\n        ...listingsData,  \r\n      ].join('\\n');\r\n  \r\n      return csvContent;\r\n    } catch (err) {\r\n      console.log(`Error while generating CSV: ${err}`);\r\n      return '';\r\n    }\r\n};\r\n\r\n\r\ndocument.getElementById('downloadExcelButton').addEventListener('click',async   function() {\r\n    let address = document.querySelector('#address').value || 'Bangalore'\r\n    let rows = parseInt(document.getElementById('rowsperpage').value) || 20\r\n    // let latitude = parseFloat(document.querySelector('#latitude').value) \r\n    // let longitude = parseFloat(document.getElementById('longitude').value)\r\n    let latitude = null\r\n    let longitude = null\r\n\r\n\r\n    const buffer = await getDataAndGenerateCSVBuffer(address, rows , latitude , longitude);\r\n    const blob = new Blob([buffer], { type: 'text/csv' });\r\n    const link = document.createElement('a');\r\n    link.href = URL.createObjectURL(blob);\r\n    link.download = 'Listings.csv';\r\n    link.click();            \r\n    URL.revokeObjectURL(link.href);\r\n});\r\n\r\n\r\n","\r\nconst fetchData = async (address, count,lat,lon) => {\r\n  try {\r\n    let apiResp = await fetch(\r\n      `http://localhost:3000/fetch-data?address=${address}&count=${count}`\r\n    );\r\n\r\n    apiResp = await apiResp.json();\r\n    return apiResp?.data?.searchQueries?.search?.results || [];\r\n  } catch (err) {\r\n    console.log(`Error while fetching data from api : ${err}`);\r\n    return [];\r\n  }\r\n};\r\n\r\nexport default fetchData;\r\n"],"names":["$233e897e55a69403$var$fetchData","address","count","lat","lon","apiResp","fetch","json","data","searchQueries","search","results","err","console","log","$dad545c909cfec2d$var$getDataAndGenerateCSVBuffer","$dad545c909cfec2d$var$generateListingsCsv","listingsData","map","listing","listingId","basicPropertyData","id","listingTitle","displayName","text","pageName","amountPerStay","priceDisplayInfoIrene","priceBeforeDiscount","displayPrice","amount","value","join","headers","document","getElementById","addEventListener","querySelector","rows","parseInt","blob","Blob","type","link","createElement","href","URL","createObjectURL","download","click","revokeObjectURL"],"version":3,"file":"index.c746a89b.js.map"}